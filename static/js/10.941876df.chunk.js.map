{"version":3,"sources":["Components/UnitTable.jsx"],"names":["createData","champKey","champ","winRate","top4Rate","commonItems","timesPlayed","descendingComparator","a","b","orderBy","headCells","id","numeric","sortable","label","createRows","unitStats","rows","Object","entries","champNames","champName","unitItems","push","StyledTableSortLabel","withStyles","root","color","active","icon","TableSortLabel","EnhancedTableHead","props","classes","order","onRequestSort","map","headCell","key","align","sortDirection","className","direction","onClick","property","event","visuallyHidden","useStyles","makeStyles","theme","width","spacing","margin","backgroundColor","bodyCell","champCell","display","alignItems","champAvatar","marginRight","itemBox","justifyContent","border","clip","height","overflow","padding","position","top","UnitTable","React","useState","setOrder","setOrderBy","setRows","useEffect","fetch","unitDataResponse","commonItemsResponse","json","unitData","fetchData","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","labelId","hover","component","scope","title","variant","src","champImages","parseInt","itemNames","itemImages"],"mappings":"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","file":"static/js/10.941876df.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { champImages, champNames } from '../Static/champions/ChampData.js'\r\nimport { itemImages, itemNames } from '../Static/items/ItemData.js'\r\nimport { Box } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\n\r\nfunction createData(champKey, champ, winRate, top4Rate, commonItems, timesPlayed) {\r\n    return { champKey, champ, winRate, top4Rate, commonItems, timesPlayed };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'champ', numeric: false, sortable: true, label: 'Champion' },\r\n    { id: 'winRate', numeric: true, sortable: true, label: 'Win Rate' },\r\n    { id: 'top4Rate', numeric: true, sortable: true, label: 'Top 4 Rate' },\r\n    { id: 'commonItems', numeric: true, sortable: false, label: 'Most Used Items' },\r\n    { id: 'timesPlayed', numeric: true, sortable: true, label: 'Times Played' },\r\n];\r\n\r\nfunction createRows(unitStats, commonItems) {\r\n    const rows = [];\r\n    for (const [champKey, champName] of Object.entries(champNames)) {\r\n        const winRate = unitStats[champKey]['winPercentage'] * 100\r\n        const top4Rate = unitStats[champKey]['top4Percentage'] * 100\r\n        const timesPlayed = unitStats[champKey]['totalTimesPlayed']\r\n        const unitItems = commonItems[champKey]\r\n        rows.push(createData(champKey, champName, winRate, top4Rate, unitItems, timesPlayed))\r\n    }\r\n    return rows\r\n}\r\n\r\nconst StyledTableSortLabel = withStyles({\r\n    root: {\r\n        color: 'white',\r\n        '&:hover': {\r\n            color: 'white',\r\n        },\r\n        '&$active': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    }\r\n})(TableSortLabel);\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n                key={headCell.id}\r\n                align={headCell.id === 'champ' ? 'left' : 'center'}\r\n                sortDirection={orderBy === headCell.id ? order : false}\r\n                className={classes.headCell}\r\n            >   \r\n                {headCell.sortable === true &&\r\n                <StyledTableSortLabel\r\n                    active={orderBy === headCell.id}\r\n                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                    onClick={createSortHandler(headCell.id)}\r\n                >\r\n                    {headCell.label}\r\n                    {orderBy === headCell.id ? (\r\n                    <span className={classes.visuallyHidden}>\r\n                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                    </span>\r\n                    ) : null}\r\n                </StyledTableSortLabel>}\r\n                {headCell.sortable === false &&\r\n                    headCell.label\r\n                }\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: theme.spacing(130),\r\n        margin: 'auto',\r\n    },\r\n    headCell: {\r\n        backgroundColor: '#263238',\r\n        color: 'white',\r\n    },\r\n    bodyCell: {\r\n        backgroundColor: '#F5F5F6',\r\n    },\r\n    champCell: {\r\n        backgroundColor: '#F5F5F6',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    champAvatar: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    itemBox: {\r\n        display: 'flex',\r\n        margin: 'auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function UnitTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('champ');\r\n    const [rows, setRows] = React.useState([]);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const unitDataResponse = await fetch('https://tftstats-api.herokuapp.com/unitPercentages')\r\n            const commonItemsResponse = await fetch('https://tftstats-api.herokuapp.com/commonItems')\r\n            const unitData = await unitDataResponse.json()\r\n            const commonItems = await commonItemsResponse.json()\r\n            const rows = createRows(unitData, commonItems)\r\n            setRows(rows)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy)).map((row, index) => {\r\n                                const labelId = `row-${index}`\r\n                                return (\r\n                                    <TableRow hover key={row.champ}>\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" className={classes.champCell}>\r\n                                            <Tooltip title={row.champ}>\r\n                                                <Avatar variant='rounded' className={classes.champAvatar} src={champImages[row.champKey]} />\r\n                                            </Tooltip>\r\n                                            {row.champ}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.bodyCell} align=\"center\"> {parseInt(row.winRate) + '%'} </TableCell>\r\n                                        <TableCell className={classes.bodyCell} align=\"center\"> {parseInt(row.top4Rate) + '%'} </TableCell>\r\n                                        <TableCell className={classes.bodyCell} align=\"center\">\r\n                                            <Box className={classes.itemBox}>\r\n                                                <Tooltip title={itemNames[row.commonItems[0][0]]}>\r\n                                                    <Avatar variant='rounded' className={classes.champAvatar} src={itemImages[row.commonItems[0][0]]} />\r\n                                                </Tooltip>\r\n                                                <Tooltip title={itemNames[row.commonItems[1][0]]}>\r\n                                                    <Avatar variant='rounded' className={classes.champAvatar} src={itemImages[row.commonItems[1][0]]} />\r\n                                                </Tooltip>\r\n                                                <Tooltip title={itemNames[row.commonItems[2][0]]}>\r\n                                                    <Avatar variant='rounded' className={classes.champAvatar} src={itemImages[row.commonItems[2][0]]} />\r\n                                                </Tooltip>\r\n                                            </Box>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.bodyCell} align=\"center\"> {parseInt(row.timesPlayed)} </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}